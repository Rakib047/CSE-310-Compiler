Line# 1: Token <INT> Lexeme int found
Line# 1: Token <ID> Lexeme func found
Line# 1: Token <LPAREN> Lexeme ( found
Line# 1: Token <INT> Lexeme int found
Line# 1: Token <ID> Lexeme n found
Line# 1: Token <RPAREN> Lexeme ) found
Line# 1: Token <LCURL> Lexeme { found
Line# 2: Token <INT> Lexeme int found
Line# 2: Token <ID> Lexeme i found
Line# 2: Token <SEMICOLON> Lexeme ; found
Line# 3: Token <IF> Lexeme if found
Line# 3: Token <LPAREN> Lexeme ( found
Line# 3: Token <ID> Lexeme n found
Line# 3: Token <RELOP> Lexeme == found
Line# 3: Token <CONST_INT> Lexeme 0 found
Line# 3: Token <RPAREN> Lexeme ) found
Line# 3: Token <RETURN> Lexeme return found
Line# 3: Token <CONST_INT> Lexeme 0 found
Line# 3: Token <SEMICOLON> Lexeme ; found
Line# 4: Token <ID> Lexeme i found
Line# 4: Token <ASSIGNOP> Lexeme = found
Line# 4: Token <ID> Lexeme n found
Line# 4: Token <SEMICOLON> Lexeme ; found
Line# 5: Token <RETURN> Lexeme return found
Line# 5: Token <ID> Lexeme func found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <ID> Lexeme n found
Line# 5: Token <ADDOP> Lexeme - found
Line# 5: Token <CONST_INT> Lexeme 1 found
Line# 5: Token <RPAREN> Lexeme ) found
Line# 5: Token <ADDOP> Lexeme + found
Line# 5: Token <ID> Lexeme i found
Line# 5: Token <SEMICOLON> Lexeme ; found
Line# 6: Token <RCURL> Lexeme } found
Line# 8: Token <INT> Lexeme int found
Line# 8: Token <ID> Lexeme func2 found
Line# 8: Token <LPAREN> Lexeme ( found
Line# 8: Token <INT> Lexeme int found
Line# 8: Token <ID> Lexeme n found
Line# 8: Token <RPAREN> Lexeme ) found
Line# 8: Token <LCURL> Lexeme { found
Line# 9: Token <INT> Lexeme int found
Line# 9: Token <ID> Lexeme i found
Line# 9: Token <SEMICOLON> Lexeme ; found
Line# 10: Token <IF> Lexeme if found
Line# 10: Token <LPAREN> Lexeme ( found
Line# 10: Token <ID> Lexeme n found
Line# 10: Token <RELOP> Lexeme == found
Line# 10: Token <CONST_INT> Lexeme 0 found
Line# 10: Token <RPAREN> Lexeme ) found
Line# 10: Token <RETURN> Lexeme return found
Line# 10: Token <CONST_INT> Lexeme 0 found
Line# 10: Token <SEMICOLON> Lexeme ; found
Line# 11: Token <ID> Lexeme i found
Line# 11: Token <ASSIGNOP> Lexeme = found
Line# 11: Token <ID> Lexeme n found
Line# 11: Token <SEMICOLON> Lexeme ; found
Line# 12: Token <RETURN> Lexeme return found
Line# 12: Token <ID> Lexeme func found
Line# 12: Token <LPAREN> Lexeme ( found
Line# 12: Token <ID> Lexeme n found
Line# 12: Token <ADDOP> Lexeme - found
Line# 12: Token <CONST_INT> Lexeme 1 found
Line# 12: Token <RPAREN> Lexeme ) found
Line# 12: Token <ADDOP> Lexeme + found
Line# 12: Token <ID> Lexeme i found
Line# 12: Token <SEMICOLON> Lexeme ; found
Line# 13: Token <RCURL> Lexeme } found
Line# 15: Token <INT> Lexeme int found
Line# 15: Token <ID> Lexeme main found
Line# 15: Token <LPAREN> Lexeme ( found
Line# 15: Token <RPAREN> Lexeme ) found
Line# 15: Token <LCURL> Lexeme { found
Line# 16: Token <INT> Lexeme int found
Line# 16: Token <ID> Lexeme a found
Line# 16: Token <SEMICOLON> Lexeme ; found
Line# 17: Token <ID> Lexeme a found
Line# 17: Token <ASSIGNOP> Lexeme = found
Line# 17: Token <ID> Lexeme func found
Line# 17: Token <LPAREN> Lexeme ( found
Line# 17: Token <CONST_INT> Lexeme 7 found
Line# 17: Token <RPAREN> Lexeme ) found
Line# 17: Token <SEMICOLON> Lexeme ; found
Line# 18: Token <LPAREN> Lexeme ( found
Line# 18: Token <ID> Lexeme a found
Line# 18: Token <RPAREN> Lexeme ) found
Line# 18: Token <SEMICOLON> Lexeme ; found
Line# 19: Token <RETURN> Lexeme return found
Line# 19: Token <CONST_INT> Lexeme 0 found
Line# 19: Token <SEMICOLON> Lexeme ; found
Line# 20: Token <RCURL> Lexeme } found
	ScopeTable# 1
	1--> <,> 
Total Lines: 22
Total Errors: 0
